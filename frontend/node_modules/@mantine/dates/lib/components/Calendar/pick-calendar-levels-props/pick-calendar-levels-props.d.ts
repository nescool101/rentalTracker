export declare function pickCalendarProps<T extends Record<string, any>>(props: T): {
    calendarProps: {
        maxLevel: any;
        minLevel: any;
        defaultLevel: any;
        level: any;
        onLevelChange: any;
        nextIcon: any;
        previousIcon: any;
        date: any;
        defaultDate: any;
        onDateChange: any;
        numberOfColumns: any;
        columnsToScroll: any;
        ariaLabels: any;
        nextLabel: any;
        previousLabel: any;
        onYearSelect: any;
        onMonthSelect: any;
        onYearMouseEnter: any;
        onMonthMouseEnter: any;
        onNextMonth: any;
        onPreviousMonth: any;
        onNextYear: any;
        onPreviousYear: any;
        onNextDecade: any;
        onPreviousDecade: any;
        withCellSpacing: any;
        highlightToday: any;
        __updateDateOnYearSelect: any;
        __updateDateOnMonthSelect: any;
        withWeekNumbers: any;
        firstDayOfWeek: any;
        weekdayFormat: any;
        weekendDays: any;
        getDayProps: any;
        excludeDate: any;
        renderDay: any;
        hideOutsideDates: any;
        hideWeekdays: any;
        getDayAriaLabel: any;
        monthLabelFormat: any;
        monthsListFormat: any;
        getMonthControlProps: any;
        yearLabelFormat: any;
        yearsListFormat: any;
        getYearControlProps: any;
        decadeLabelFormat: any;
        allowSingleDateInRange: any;
        allowDeselect: any;
        minDate: any;
        maxDate: any;
        locale: any;
    };
    others: Omit<T, "date" | "locale" | "defaultDate" | "__updateDateOnYearSelect" | "__updateDateOnMonthSelect" | "onDateChange" | "numberOfColumns" | "columnsToScroll" | "ariaLabels" | "nextLabel" | "previousLabel" | "onNextDecade" | "onPreviousDecade" | "onNextYear" | "onPreviousYear" | "onNextMonth" | "onPreviousMonth" | "onYearMouseEnter" | "onMonthMouseEnter" | "nextIcon" | "previousIcon" | "decadeLabelFormat" | "yearsListFormat" | "getYearControlProps" | "withCellSpacing" | "minDate" | "maxDate" | "yearLabelFormat" | "monthsListFormat" | "getMonthControlProps" | "monthLabelFormat" | "firstDayOfWeek" | "weekdayFormat" | "weekendDays" | "getDayProps" | "excludeDate" | "renderDay" | "hideOutsideDates" | "hideWeekdays" | "getDayAriaLabel" | "highlightToday" | "withWeekNumbers" | "defaultLevel" | "level" | "onLevelChange" | "onYearSelect" | "onMonthSelect" | "maxLevel" | "allowDeselect" | "allowSingleDateInRange" | "minLevel">;
};
